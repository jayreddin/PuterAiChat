{"chunk":42,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"A `Promise` that will resolve to `true` when the key-value store has been flushed (emptied). The promise will never reject.\n\n## Examples\n\n```html;kv-flush\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        (async () => {\n            // (1) Create a number of key-value pairs\n            await puter.kv.set('name', 'Puter Smith');\n            await puter.kv.set('age', 21);\n            await puter.kv.set('isCool', true);\n            puter.print(\"Key-value pairs created/updated<br>\");\n\n            // (2) Rretrieve all keys\n            const keys = await puter.kv.list();\n            puter.print(`Keys are: ${keys}<br>`);\n\n            // (3) Flush the key-value store\n            await puter.kv.flush();\n            puter.print('Key-value store flushed<br>');\n\n            // (4) Retrieve all keys again, should be empty\n            const keys2 = await puter.kv.list();\n            puter.print(`Keys are now: ${keys2}<br>`);\n        })();\n    </script>\n</body>\n```\n\n\n<!--\nFile: KV/get.md\n-->\n\nWhen passed a key, will return that key's value, or `null` if the key does not exist.\n\n## Syntax\n```js\nputer.kv.get(key)\n```\n\n## Parameters\n#### `key` (String) (required)\nA string containing the name of the key you want to retrieve the value of.\n\n## Return value \nA `Promise` that will resolve to a string containing the value of the key. If the key does not exist, it will resolve to `null`.\n\n## Examples\n\n<strong class=\"example-title\">Retrieve the value of key 'name'</strong>\n\n```html;kv-get\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n"}