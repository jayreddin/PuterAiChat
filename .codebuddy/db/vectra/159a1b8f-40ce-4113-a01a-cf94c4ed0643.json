{"chunk":5,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"        <input type=\"text\" id=\"userInput\" value=\"Paris\" placeholder=\"Ask about the weather (e.g. What's the weather in Paris?)\" />\n        <button id=\"submit\">Submit</button>\n        <div id=\"response\"></div>\n    </div>\n\n    <script>\n        // Mock weather function - in a real app, this would call a weather API\n        function getWeather(location) {\n            const mockWeatherData = {\n                'Paris': '22°C, Partly Cloudy',\n                'London': '18°C, Rainy',\n                'New York': '25°C, Sunny',\n                'Tokyo': '28°C, Clear'\n            };\n            return mockWeatherData[location] || '20°C, Unknown';\n        }\n\n        // Define the tools (functions) available to the AI\n        const tools = [{\n            type: \"function\",\n            function: {\n                name: \"get_weather\",\n                description: \"Get current weather for a given location\",\n                parameters: {\n                    type: \"object\",\n                    properties: {\n                        location: {\n                            type: \"string\",\n                            description: \"City name e.g. Paris, London\"\n                        }\n                    },\n                    required: [\"location\"],\n                    additionalProperties: false\n                },\n                strict: true\n            }\n        }];\n\n        async function handleSubmit() {\n            const userInput = $('#userInput').val();\n            if (!userInput) return;\n\n            // Disable button and show loading state\n            $('#submit').prop('disabled', true).text('Loading...');\n            $('#response').hide();\n\n            try {\n                // First message to get function call\n                const completion = await puter.ai.chat(userInput, { tools });\n                let finalResponse;\n\n                // Check if we got a function call\n                if (completion.message.tool_calls && completion.message.tool_calls.length > 0) {\n                    const toolCall = completion.message.tool_calls[0];\n"}