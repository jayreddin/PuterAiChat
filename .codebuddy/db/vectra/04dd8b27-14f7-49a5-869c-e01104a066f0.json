{"chunk":81,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        (async () => {\n            // (1) Create a random directory\n            let dirName = puter.randName();\n            await puter.fs.mkdir(dirName)\n\n            // (2) Create 'index.html' in the directory with the contents \"Hello, world!\"\n            await puter.fs.write(`${dirName}/index.html`, '<h1>Hello, world!</h1>');\n\n            // (3) Host the directory under a random subdomain\n            let subdomain = puter.randName();\n            const site = await puter.hosting.create(subdomain, dirName)\n\n            puter.print(`Website hosted at: <a href=\"https://${site.subdomain}.puter.site\" target=\"_blank\">https://${site.subdomain}.puter.site</a>`);\n        })();\n    </script>\n</body>\n</html>\n```\n\n</div>\n\n<div class=\"example-content\" data-section=\"auth\">\n\n#### Authenticate a user\n\n```html;intro-auth\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <button id=\"sign-in\">Sign in</button>\n    <script>\n        // Because signIn() opens a popup window, it must be called from a user action.\n        document.getElementById('sign-in').addEventListener('click', async () => {\n            // signIn() will resolve when the user has signed in.\n            await puter.auth.signIn().then((res) => {\n                puter.print('Signed in<br>' + JSON.stringify(res));\n            });\n        });\n    </script>\n</body>\n</html>\n```\n\n</div>\n\n<!--\nFile: security.md\n-->\n\nIn this document we will cover the security model of Puter.js and how it manages apps' access to user data and cloud resources.\n\n## Authentication\n\n"}