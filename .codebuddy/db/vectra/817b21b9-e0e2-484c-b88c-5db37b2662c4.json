{"chunk":46,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"            const key_vals = await puter.kv.list(true);\n            puter.print(`Keys and values are: ${(key_vals).map((key_val) => key_val.key + ' => ' + key_val.value)}<br><br>`);\n\n            // (4) Match keys with a pattern\n            const keys_matching_pattern = await puter.kv.list('is*');\n            puter.print(`Keys matching pattern are: ${keys_matching_pattern}<br>`);\n\n            // (5) Delete all keys (cleanup)\n            await puter.kv.del('name');\n            await puter.kv.del('age');\n            await puter.kv.del('isCool');\n        })();\n    </script>\n</body>\n```\n\n\n<!--\nFile: KV/set.md\n-->\n\nWhen passed a key and a value, will add it to the user's key-value store, or update that key's value if it already exists.\n\n<div class=\"info\">Each app gets its own sandboxed key-value store in each user's account. Apps cannot access each other's key-value stores.</div>\n\n## Syntax\n```js\nputer.kv.set(key, value)\n```\n\n## Parameters\n\n#### `key` (String) (required)\nA string containing the name of the key you want to create/update. The maximum allowed `key` size is **1 KB**.\n\n#### `value` (String | Number | Boolean)\nA string containing the value you want to give the key you are creating/updating. The maximum allowed `value` size is **400 KB**.\n\n## Return value \nA `Promise` that will resolves to `true` when the key-value pair has been created or the existing key's value has been updated.\n\n## Examples\n\n<strong class=\"example-title\">Create a new key-value pair</strong>\n\n```html;kv-set\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n"}