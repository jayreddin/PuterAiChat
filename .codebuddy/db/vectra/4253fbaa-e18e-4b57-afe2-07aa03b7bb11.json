{"chunk":30,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        // Retrieves the storage space capacity and usage for the current user, and prints them to the browser console\n        puter.space().then((space)=>{\n            console.log(space)\n        });\n    </script>\n</body>\n</html>\n```\n\n<!--\nFile: FS/stat.md\n-->\n\nThis method allows you to get information about a file or directory.\n\n## Syntax\n\n```js\nputer.fs.stat(path)\n```\n\n## Parameters\n#### `path` (string) (required)\nThe path to the file or directory to get information about.\nIf `path` is not absolute, it will be resolved relative to the app's root directory.\n\n## Return value\nA `Promise` that resolves to the [`fsitem`](/Objects/fsitem/) of the specified file or directory.\n\n## Examples\n\n<strong class=\"example-title\">Get information about a file</strong>\n\n```html;fs-stat\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        (async () => {\n            // () create a file\n            await puter.fs.write('hello.txt', 'Hello, world!');\n            puter.print('hello.txt created<br>');\n\n            // (2) get information about hello.txt\n            const file = await puter.fs.stat('hello.txt');\n            puter.print(`hello.txt name: ${file.name}<br>`);\n            puter.print(`hello.txt path: ${file.path}<br>`);\n            puter.print(`hello.txt size: ${file.size}<br>`);\n            puter.print(`hello.txt created: ${file.created}<br>`);\n        })()\n    </script>\n</body>\n</html>\n```\n\n\n<!--\nFile: FS/upload.md\n-->\n\nGiven a number of local items, upload them to the Puter filesystem.\n\n## Syntax\n\n```js\nputer.fs.upload(items)\nputer.fs.upload(items, dirPath)\n"}