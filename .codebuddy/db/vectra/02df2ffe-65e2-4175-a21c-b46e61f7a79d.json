{"chunk":25,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"        await puter.fs.write(filename, 'Hello, world!');\n        puter.print('Created file: ' + filename + '<br>');\n\n        // (2) Move the file into a non-existent directory\n        let dirname = puter.randName();\n        await puter.fs.move(filename, dirname + '/' + filename, { createMissingParents: true });\n        puter.print(`Moved ${filename} to ${dirname}<br>`);\n\n        // (3) Delete the file and directory (cleanup)\n        await puter.fs.delete('non-existent-directory/' + filename);\n        await puter.fs.delete('non-existent-directory');\n    })();\n    </script>\n</body>\n</html>\n```\n\n\n<!--\nFile: FS/read.md\n-->\n\nReads data from a file.\n\n## Syntax\n```js\nputer.fs.read(path)\n```\n\n## Parameters\n#### `path` (String) (required)\nPath of the file to read.\nIf `path` is not absolute, it will be resolved relative to the app's root directory.\n\n## Return value\nA `Promise` that will resolve to a `Blob` object containing the contents of the file.\n\n## Examples\n\n<strong class=\"example-title\">Read a file</strong>\n\n```html;fs-read\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        (async () => {\n            // (1) Create a random text file\n            let filename = puter.randName() + \".txt\";\n            await puter.fs.write(filename, \"Hello world! I'm a file!\");\n            puter.print(`\"${filename}\" created<br>`);\n\n            // (2) Read the file and print its contents\n            let blob = await puter.fs.read(filename);\n            let content = await blob.text();\n            puter.print(`\"${filename}\" read (content: \"${content}\")<br>`);\n        })();\n    </script>\n</body>\n</html>\n"}