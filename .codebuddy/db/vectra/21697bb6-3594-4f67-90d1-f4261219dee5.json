{"chunk":19,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"- `overwrite` (Boolean) - Whether to overwrite the destination file or directory if it already exists. Defaults to `false`.\n- `dedupeName` (Boolean) - Whether to deduplicate the file or directory name if it already exists. Defaults to `false`.\n- `newName` (String) - The new name to use for the copied file or directory. Defaults to `undefined`.\n\n\n## Return value\nA `Promise` that will resolve to the copied file or directory. If the source file or directory does not exist, the promise will be rejected with an error.\n\n## Examples\n\n<strong class=\"example-title\"> Copy a file</strong>\n\n```html;fs-copy\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n    (async () => {\n        // (1) Create a random text file\n        let filename = puter.randName() + '.txt';\n        await puter.fs.write(filename, 'Hello, world!');\n        puter.print(`Created file: \"${filename}\"<br>`);\n\n        // (2) create a random directory\n        let dirname = puter.randName();\n        await puter.fs.mkdir(dirname);\n        puter.print(`Created directory: \"${dirname}\"<br>`);\n\n        // (3) Copy the file into the directory\n        puter.fs.copy(filename, dirname).then((file)=>{\n            puter.print(`Copied file: \"${filename}\" to directory \"${dirname}\"<br>`);\n        }).catch((error)=>{\n            puter.print(`Error copying file: \"${error}\"<br>`);\n        });\n    })()\n    </script>\n</body>\n</html>\n```\n\n\n<!--\nFile: FS/delete.md\n-->\n\nDeletes a file or directory.\n\n## Syntax\n```js\nputer.fs.delete(path)\nputer.fs.delete(path, options)\n```\n\n## Parameters\n#### `path` (String) (required)\nPath of the file or directory to delete.\n"}