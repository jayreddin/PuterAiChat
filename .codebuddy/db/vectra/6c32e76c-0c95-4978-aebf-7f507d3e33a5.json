{"chunk":16,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        (async () => {\n            // (1) Create a random app\n            let appName = puter.randName();\n            await puter.apps.create(appName, \"https://example.com\")\n            puter.print(`\"${appName}\" created<br>`);\n\n            // (2) Update the app\n            let updated_app = await puter.apps.update(appName, {title: \"My Updated Test App!\"})\n            puter.print(`Changed title to \"${updated_app.title}\"<br>`);\n\n            // (3) Delete the app (cleanup)\n            await puter.apps.delete(appName)\n        })();\n    </script>\n</body>\n</html>\n```\n\n\n<!--\nFile: Auth/getUser.md\n-->\n\nReturns the user's basic information.\n\n\n## Syntax\n\n```js\nputer.auth.getUser();\n```\n\n## Parameters\n\nNone\n\n## Return value\n\nA promise that resolves to an object containing the user's basic information. The user's basic information is an object with the following properties:\n\n- `uuid` - The user's UUID. This is a unique identifier that can be used to identify the user.\n- `username` - The user's username.\n- `email_confirmed` - Whether the user has confirmed their email address.\n\n## Example\n\n```html;auth-get-user\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        puter.auth.getUser().then(function(user) {\n            puter.print(JSON.stringify(user));\n        });\n    </script>\n</body>\n</html>\n```\n\n\n<!--\nFile: Auth/isSignedIn.md\n-->\n\nChecks whether the user is signed into the application.\n\n## Syntax\n\n```js\nputer.auth.isSignedIn();\n```\n\n## Parameters\n\nNone\n\n## Return value\n\nReturns `true` if the user is signed in, `false` otherwise.\n\n## Example\n\n```html\n<html>\n<body>\n"}