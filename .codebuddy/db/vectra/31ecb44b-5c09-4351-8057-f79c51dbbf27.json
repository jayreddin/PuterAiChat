{"chunk":35,"numChunks":47,"fileHash":"DS6QWbTdrmdJEfNC8Ec7aEISJw5n4IF3kMzfDlJvsks=","filePath":"attached_assets/Puterexamples.md","content":"                    updateUI();  \n                    setSaveStatus('Previous game loaded\\!');  \n                }  \n            } catch (error) {  \n                setSaveStatus('Could not load previous game');  \n            }  \n        }\n\n        loadLastGame();  \n    \\</script\\>  \n\\</body\\>  \n\\</html\\>\n\nThe auto-save system builds on the basic save/load functionality by automatically saving after player actions. Instead of saving immediately after every action, it uses a delay timer to prevent excessive saves. This is particularly useful for games where players make frequent actions.\n\nThe auto-save implementation demonstrates several important concepts:\n\n* Uses a timeout to batch multiple quick actions into a single save  \n* Provides visual feedback about the save status  \n* Automatically loads the previous game state when starting  \n* Saves after meaningful actions rather than at fixed intervals\n\nThis approach is ideal for RPGs, adventure games, or any game where losing progress would be frustrating for players.\n\n## **Example 3**\n\n## Save Multiple Characters\n\nHere's how to implement multiple character saves:\n\n\\<html\\>  \n\\<body\\>  \n    \\<script src=\"https://js.puter.com/v2/\"\\>\\</script\\>  \n      \n    \\<div\\>  \n        \\<h3\\>Character Selection\\</h3\\>  \n        \\<div id=\"character-list\"\\>\\</div\\>  \n        \\<br\\>  \n        \\<button onclick=\"createCharacter()\"\\>New Character\\</button\\>  \n          \n        \\<div id=\"active-character\" style=\"display: none\"\\>  \n            \\<h3\\>Playing as: \\<span id=\"char-name\"\\>\\</span\\>\\</h3\\>  \n            \\<p\\>Power: \\<span id=\"power\"\\>1\\</span\\>\\</p\\>  \n            \\<button onclick=\"increasePower()\"\\>Train\\</button\\>  \n"}