{"chunk":3,"numChunks":4,"fileHash":"dtnu97PIN/Lv/WzFuDc9yp/MO+9JuCqZzU3Q+lggpP8=","filePath":"client/src/components/chat/chat-input.tsx","content":"import { useState, useRef, KeyboardEvent } from \"react\";\nexport function ChatInput({ onSend, disabled }: ChatInputProps) {\n  const [message, setMessage] = useState(\"\");\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const handleSubmit = () => {\n    if (message.trim() && !disabled) {\n      onSend(message.trim());\n      setMessage(\"\");\n      if (textareaRef.current) {\n        textareaRef.current.style.height = \"auto\";\n      }\n    }\n  };\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit();\n    }\n  };\n  const insertText = (text: string) => {\n    setMessage(prev => {\n      const position = textareaRef.current?.selectionStart || prev.length;\n      const newMessage = prev.slice(0, position) + text + prev.slice(position);\n      return newMessage;\n    });\n\n    // Focus the textarea after inserting\n    setTimeout(() => {\n      if (textareaRef.current) {\n        textareaRef.current.focus();\n      }\n    }, 0);\n  };"}