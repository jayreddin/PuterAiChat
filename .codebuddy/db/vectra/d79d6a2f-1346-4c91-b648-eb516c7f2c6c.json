{"chunk":17,"numChunks":47,"fileHash":"DS6QWbTdrmdJEfNC8Ec7aEISJw5n4IF3kMzfDlJvsks=","filePath":"attached_assets/Puterexamples.md","content":"Here's an example that allows users to select different languages:\n\n\\<html\\>  \n\\<body\\>  \n    \\<textarea id=\"text-input\" rows=\"4\" cols=\"50\"\\>Hello, world\\!\\</textarea\\>  \n    \\<br\\>  \n    \\<select id=\"language-select\"\\>  \n        \\<option value=\"en-US\"\\>English (US)\\</option\\>  \n        \\<option value=\"fr-FR\"\\>French\\</option\\>  \n        \\<option value=\"de-DE\"\\>German\\</option\\>  \n        \\<option value=\"es-ES\"\\>Spanish\\</option\\>  \n        \\<option value=\"it-IT\"\\>Italian\\</option\\>  \n    \\</select\\>  \n    \\<button id=\"speak-button\"\\>Speak\\</button\\>\n\n    \\<script src=\"https://js.puter.com/v2/\"\\>\\</script\\>  \n    \\<script\\>  \n        document.getElementById('speak-button').addEventListener('click', () \\=\\> {  \n            const text \\= document.getElementById('text-input').value;  \n            const language \\= document.getElementById('language-select').value;  \n            puter.ai.txt2speech(text, language)  \n                .then((audio) \\=\\> {  \n                    audio.play();  \n                })  \n                .catch((error) \\=\\> {  \n                    console.error('Error:', error);  \n                });  \n        });  \n    \\</script\\>  \n\\</body\\>  \n\\</html\\>\n\nThat's it\\! You now have a free alternative to the Amazon Polly API using Puter.js. This allows you to add text-to-speech capabilities to your web applications without worrying about API keys or usage limits.\n\n## Additional Features\n\n"}