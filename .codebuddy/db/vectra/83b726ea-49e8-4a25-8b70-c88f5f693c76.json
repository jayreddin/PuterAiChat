{"chunk":7,"numChunks":15,"fileHash":"uafVARK9P9xA1Ty1o0C2va3COenZCiNJZ6xw3GDiHkU=","filePath":"client/src/components/chat/chat-container.tsx","content":"import { useEffect, useRef, useState, forwardRef } from \"react\";\nexport const ChatContainer = forwardRef<HTMLDivElement, ChatContainerProps>(({ conversation, onUpdate }, ref) => {\n  const [isTyping, setIsTyping] = useState(false);\n  const [isPuterInitialized, setIsPuterInitialized] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const model = getModelById(conversation.model);\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [conversation.messages]);\n  useEffect(() => {\n    const checkPuter = setInterval(() => {\n      console.log('Checking Puter availability:', {\n        exists: !!window.puter,\n        properties: window.puter ? Object.keys(window.puter) : 'not loaded'\n      });\n\n      if (window.puter) {\n        clearInterval(checkPuter);\n        setIsPuterInitialized(true);\n        console.log('Puter is ready to use');\n      }\n    }, 1000);\n\n    return () => clearInterval(checkPuter);\n  }, []);"}