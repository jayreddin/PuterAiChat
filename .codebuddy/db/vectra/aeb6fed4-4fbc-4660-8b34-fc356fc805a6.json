{"chunk":27,"numChunks":47,"fileHash":"DS6QWbTdrmdJEfNC8Ec7aEISJw5n4IF3kMzfDlJvsks=","filePath":"attached_assets/Puterexamples.md","content":"        // Add click event listener to the sign in button  \n        signInButton.addEventListener('click', async () \\=\\> {  \n            try {  \n                // Attempt to sign in  \n                await puter.auth.signIn();  \n                  \n                // Get user information after successful sign in  \n                const user \\= await puter.auth.getUser();  \n                userInfoDiv.innerHTML \\= \\`Welcome, ${user.username}\\!\\`;  \n                  \n                // Hide the sign in button  \n                signInButton.style.display \\= 'none';  \n            } catch (error) {  \n                console.error('Sign in failed:', error);  \n            }  \n        });  \n    \\</script\\>  \n\\</body\\>  \n\\</html\\>\n\n## **Example 2**\n\n## Check Authentication Status\n\nYou can check if a user is already signed in using the [isSignedIn()](https://docs.puter.com/Auth/isSignedIn/) method:\n\n\\<html\\>  \n\\<body\\>  \n    \\<script src=\"https://js.puter.com/v2/\"\\>\\</script\\>  \n    \\<div id=\"status\"\\>\\</div\\>  \n    \\<button id=\"sign-in\" style=\"display: none;\"\\>Sign in\\</button\\>  \n    \\<button id=\"sign-out\" style=\"display: none;\"\\>Sign out\\</button\\>\n\n    \\<script\\>  \n        const statusDiv \\= document.getElementById('status');  \n        const signInButton \\= document.getElementById('sign-in');  \n        const signOutButton \\= document.getElementById('sign-out');\n\n        // Function to update UI based on auth state  \n        async function updateAuthUI() {  \n            if (puter.auth.isSignedIn()) {  \n                const user \\= await puter.auth.getUser();  \n                statusDiv.textContent \\= \\`Signed in as: ${user.username}\\`;  \n                signInButton.style.display \\= 'none';  \n"}