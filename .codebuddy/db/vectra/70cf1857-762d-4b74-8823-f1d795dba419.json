{"chunk":13,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"- `stats_period` (optional): A string representing the period for which to get the user and open count. Possible values are `today`, `yesterday`, `7d`, `30d`, `this_month`, `last_month`, `this_year`, `last_year`, `month_to_date`, `year_to_date`, `last_12_months`. Default is `all` (all time).\n\n- `icon_size` (optional): An integer representing the size of the icons to return. Possible values are `null`, `16`, `32`, `64`, `128`, `256`, and `512`. Default is `null` (the original size).\n\n## Return value\nA `Promise` that will resolve to the [`app`](/Objects/app/) with the given name.\n\n## Examples\n\n<strong class=\"example-title\">Create a random app then get it</strong>\n\n```html\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        (async () => {\n            // (1) Generate a random app name to make sure it doesn't already exist\n            let appName = puter.randName();\n\n            // (2) Create the app\n            await puter.apps.create(appName, \"https://example.com\");\n            puter.print(`\"${appName}\" created<br>`);\n\n            // (3) Retrieve the app using get()\n            let app = await puter.apps.get(appName);\n            puter.print(`\"${appName}\" retrieved using get(): id: ${app.uid}<br>`);\n\n            // (4) Delete the app (cleanup)\n            await puter.apps.delete(appName);\n        })();\n    </script>\n</body>\n</html>\n```\n\n\n<!--\nFile: Apps/list.md\n-->\n\nReturns an array of all apps belonging to the user and that this app has access to. If the user has no apps, the array will be empty.\n\n## Syntax\n```js\nputer.apps.list()\n"}