{"chunk":1,"numChunks":47,"fileHash":"DS6QWbTdrmdJEfNC8Ec7aEISJw5n4IF3kMzfDlJvsks=","filePath":"attached_assets/Puterexamples.md","content":"In this example, we're using the [puter.ai.chat](https://docs.puter.com/AI/chat/) function to generate text with GPT-4o. The generated text is then printed to the console using the [puter.print](https://docs.puter.com/Utils/print/) function. You can replace the input text with any prompt you'd like to generate text for.\n\n## **Example 2**\n\n## Add cloud storage to your web application\n\nLet's try another example, this time using cloud storage to write and read a file:\n\n\\<html\\>  \n\\<body\\>  \n    \\<script src=\"https://js.puter.com/v2/\"\\>\\</script\\>  \n    \\<script\\>  \n        async function fileDemo() {  \n            // Write a file  \n            await puter.fs.write('hello.txt', 'Hello, Puter\\!');  \n            puter.print('File written successfully\\<br\\>');\n\n            // Read the file  \n            const fileContent \\= await puter.fs.read('hello.txt');  \n            puter.print('File content: ', await fileContent.text(), '\\<br\\>');  \n        }\n\n        fileDemo();  \n    \\</script\\>  \n\\</body\\>  \n\\</html\\>\n\nIn this example, we're using the [puter.fs.write](https://docs.puter.com/FS/write/) function to write a file to the cloud storage. We then use the [puter.fs.read](https://docs.puter.com/FS/read/) function to read the file and print its content to the console. You can replace the file name and content with your own data.\n\n## **Example 3**\n\n## Cloud Key-Value Store\n\nLet's use Puter.js to store and retrieve data from the cloud key-value store. In this example, we'll save a user preference to the cloud and then retrieve it:\n\n\\<html\\>  \n\\<body\\>  \n"}