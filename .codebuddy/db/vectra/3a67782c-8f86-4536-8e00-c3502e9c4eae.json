{"chunk":43,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"    <script>\n        (async () => {\n            // (1) Create a new key-value pair\n            await puter.kv.set('name', 'Puter Smith');\n            puter.print(\"Key-value pair 'name' created/updated<br>\");\n\n            // (2) Retrieve the value of key 'name'\n            const name = await puter.kv.get('name');\n            puter.print(`Name is: ${name}`);\n        })();\n    </script>\n</body>\n</html>\n```\n\n\n<!--\nFile: KV/incr.md\n-->\n\nIncrements the value of a key. If the key does not exist, it is initialized with 0 before performing the operation. An error is returned if the key contains a value of the wrong type or contains a string that can not be represented as integer. This operation is limited to 64 bit signed integers.\n\n## Syntax\n\n```js\nputer.kv.incr(key)\nputer.kv.incr(key, amount)\n```\n\n## Parameters\n\n#### `key` (string) (required)\n\nThe key of the value to increment.\n\n#### `amount` (integer) (optional)\n\nThe amount to increment the value by. Defaults to 1.\n\n\n## Return Value\n\nReturns the new value of the key after the increment operation.\n\n## Examples\n\n<strong class=\"example-title\">Increment the value of a key</strong>\n\n```html;kv-incr\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        puter.kv.incr('testIncrKey').then((newValue) => {\n            puter.print(`New value: ${newValue}`);\n        });\n    </script>\n</body>\n</html>\n```\n\n\n<!--\nFile: KV/list.md\n-->\n\nReturns an array of all keys in the user's key-value store for the current app. If the user has no keys, the array will be empty.\n\n## Syntax\n```js\nputer"}