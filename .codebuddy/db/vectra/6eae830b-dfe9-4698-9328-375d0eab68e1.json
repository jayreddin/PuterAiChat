{"chunk":0,"numChunks":7,"fileHash":"N+ym6wwRZ8TqkQVbxndBzYhz5FwcSitugTcOmAx1xbw=","filePath":"client/src/components/chat/chat-bubble.tsx","content":"import { Message } from \"@shared/schema\";\nimport { motion } from \"framer-motion\";\nimport { Copy, Edit2 } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { format } from \"date-fns\";\nimport { useState } from \"react\";\nimport { toast } from \"@/hooks/use-toast\";\nimport { CodeEditor } from \"./code-editor\";\ninterface ChatBubbleProps {\n  message: Message;\n  onEdit?: (content: string) => void;\n}\nfunction detectCodeBlocks(content: string) {\n  const codeBlockRegex = /```(\\w+)?\\n([\\s\\S]*?)```/g;\n  const parts: Array<{ type: 'text' | 'code', content: string, language?: string }> = [];\n  let lastIndex = 0;\n  let match;\n\n  while ((match = codeBlockRegex.exec(content)) !== null) {\n    // Add text before code block if any\n    if (match.index > lastIndex) {\n      parts.push({\n        type: 'text',\n        content: content.slice(lastIndex, match.index)\n      });\n    }\n\n    // Add code block\n    parts.push({\n      type: 'code',\n      language: match[1] || 'plaintext',\n      content: match[2].trim()\n    });\n\n    lastIndex = match.index + match[0].length;\n  }\n\n  // Add remaining text if any\n  if (lastIndex < content.length) {\n    parts.push({\n      type: 'text',\n      content: content.slice(lastIndex)\n    });\n  }\n\n  return parts;\n}"}