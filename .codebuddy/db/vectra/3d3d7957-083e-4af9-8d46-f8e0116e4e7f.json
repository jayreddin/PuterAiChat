{"chunk":47,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"        puter.kv.set('name', 'Puter Smith').then((success) => {\n            puter.print(`Key-value pair created/updated: ${success}`);\n        });\n    </script>\n</body>\n</html>\n```\n\n\n<!--\nFile: Objects/AppConnection.md\n-->\n\nProvides an interface for interaction with another app.\n\n## Attributes\n\n#### `usesSDK` (Boolean)\nWhether the target app is using Puter.js. If not, then some features of `AppConnection` will not be available.\n\n## Methods\n\n#### `on(eventName, handler)`\nListen to an event from the target app. Possible events are:\n\n- `message` - The target app sent us a message with `postMessage()`. The handler receives the message.\n- `close` - The target app has closed. The handler receives an object with an `appInstanceID` field of the closed app.\n\n#### `off(eventName, handler)`\nRemove an event listener added with `on(eventName, handler)`.\n\n#### `postMessage(message)`\nSend a message to the target app. Think of it as a more limited version of [`window.postMessage()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage). `message` can be anything that [`window.postMessage()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) would accept for its `message` parameter.\n\nIf the target app is not using the SDK, or the connection is not open, then nothing will happen.\n\n#### `close()`\nAttempt to close the target app. If you do not have permission to close it, or the target app is already closed, then nothing will happen.\n\nAn app has permission to close apps that it has launched with [`puter.ui.launchApp()`](/UI/launchApp).\n\n## Examples\n\n### Interacting with another app\n\nThis example demonstrates two apps, `parent` and `child`, communicating with each other over using `AppConnection`.\n\nIn order:\n1. `"}