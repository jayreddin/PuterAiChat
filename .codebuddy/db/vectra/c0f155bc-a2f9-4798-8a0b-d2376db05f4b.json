{"chunk":2,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"An array of objects containing the messages you want to complete. Each object must have a `role` and a `content` property. The `role` property must be one of `system`, `assistant`, `user`, or `function`. The `content` property must be a string containing the message. An example of a valid `messages` parameter is:\n\n```js\n[\n    {\n        role: 'system',\n        content: 'Hello, how are you?'\n    },\n    {\n        role: 'user',\n        content: 'I am doing well, how are you?'\n    },\n]\n```\n\nProviding a messages array is especially useful for building chatbots where you want to provide context to the completion.\n\n## Return value\n\nWhen `stream` is set to `false` (default):\n- Will resolve to a response object containing the completion message\n- If a function call is made, the response will include `tool_calls` array containing:\n  - `id` (String) - Unique identifier for the function call\n  - `function` (Object):\n    - `name` (String) - Name of function to call\n    - `arguments` (String) - JSON string of function arguments\n\nWhen `stream` is set to `true`:\n- Returns an async iterable object that you can use with a `for await...of` loop to receive the response in parts as they become available.\n\nIn case of an error, the `Promise` will reject with an error message.\n\n## Vendors\n\nWe use the following vendors to provide AI services:\n\n- `gpt-4o-mini` (default): OpenAI\n- `gpt-4o`: OpenAI \n- `o3-mini`: OpenAI\n- `o1-mini`: OpenAI\n- `claude-3-5-sonnet`: Anthropic\n- `deepseek-chat`: High-Flyer (DeepSeek)\n- `deepseek-reasoner`: High-Flyer (DeepSeek)\n"}