{"chunk":45,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"puter.kv.list(returnValues = false)\nputer.kv.list(pattern, returnValues = false)\n```\n\n## Parameters\n#### `pattern` (String) (optional)\nIf set, only keys that match the given pattern will be returned. The pattern can contain the `*` wildcard character, which matches any number of characters. For example, `abc*` will match all keys that start with `abc`, such as `abc`, `abc123`, `abc123xyz`, etc. Default is `*`, which matches all keys.\n\n#### `returnValues` (Boolean) (optional)\nIf set to `true`, the returned array will contain objects with both `key` and `value` properties. If set to `false`, the returned array will contain only the keys. Default is `false`.\n\n## Return value\nA `Promise` that will resolve to an array of all keys (and values, if `returnValues` is set to `true`) the user's key-value store for the current app. If the user has no keys, the array will be empty. \n\n## Examples\n\n<strong class=\"example-title\">Retrieve all keys in the user's key-value store for the current app</strong>\n\n```html;kv-list\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        (async () => {\n            // (1) Create a number of key-value pairs\n            await puter.kv.set('name', 'Puter Smith');\n            await puter.kv.set('age', 21);\n            await puter.kv.set('isCool', true);\n            puter.print(\"Key-value pairs created/updated<br><br>\");\n\n            // (2) Retrieve all keys\n            const keys = await puter.kv.list();\n            puter.print(`Keys are: ${keys}<br><br>`);\n\n            // (3) Retrieve all keys and values\n"}