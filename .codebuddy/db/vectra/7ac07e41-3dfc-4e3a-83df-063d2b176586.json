{"chunk":22,"numChunks":84,"fileHash":"El6foAc1cQ0gdsDTMfa4vfsgZ6DJGHS6FzgKj2FOX9U=","filePath":"attached_assets/Puter.md","content":"## Parameters\n#### `path` (string) (required)\nThe path to the directory to create.\nIf path is not absolute, it will be resolved relative to the app's root directory.\n\n#### `options` (object)\nThe options for the `mkdir` operation. The following options are supported:\n- `overwrite` (boolean) - Whether to overwrite the directory if it already exists. Defaults to `false`.\n- `dedupeName` (boolean) - Whether to deduplicate the directory name if it already exists. Defaults to `false`.\n- `createMissingParents` (boolean) - Whether to create missing parent directories. Defaults to `false`.\n\n## Return value\nReturns a promise that resolves to the directory object of the created directory.\n\n## Examples\n\n<strong class=\"example-title\">Create a new directory</strong>\n\n```html;fs-mkdir\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        // Create a directory with random name\n        let dirName = puter.randName();\n        puter.fs.mkdir(dirName).then((directory) => {\n            puter.print(`\"${dirName}\" created at ${directory.path}`);\n        }).catch((error) => {\n            puter.print('Error creating directory:', error);\n        });\n    </script>\n</body>\n</html>\n```\n\n<strong class=\"example-title\">Demonstrate the use of `dedupeName`</strong>\n\n```html;fs-mkdir-dedupe\n<html>\n<body>\n    <script src=\"https://js.puter.com/v2/\"></script>\n    <script>\n        (async () => {\n            // create a directory named 'hello'\n            let dir_1 = await puter.fs.mkdir('hello');\n            puter.print(`Directory 1: ${dir_1.name}<br>`);\n"}