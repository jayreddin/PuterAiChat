{"chunk":37,"numChunks":47,"fileHash":"DS6QWbTdrmdJEfNC8Ec7aEISJw5n4IF3kMzfDlJvsks=","filePath":"attached_assets/Puterexamples.md","content":"        async function loadCharacter(name) {  \n            try {  \n                const charData \\= await puter.kv.get(\\`char\\_${name}\\`);  \n                if (charData) {  \n                    currentChar \\= JSON.parse(charData);  \n                    updateCharacterUI();  \n                }  \n            } catch (error) {  \n                alert('Failed to load character');  \n            }  \n        }\n\n        function updateCharacterUI() {  \n            const activeDiv \\= document.getElementById('active-character');  \n            activeDiv.style.display \\= 'block';  \n            document.getElementById('char-name').textContent \\= currentChar.name;  \n            document.getElementById('power').textContent \\= currentChar.power;  \n        }\n\n        async function saveCharacter() {  \n            if (\\!currentChar) return;  \n              \n            try {  \n                await puter.kv.set(\\`char\\_${currentChar.name}\\`, JSON.stringify(currentChar));  \n                alert('Character saved\\!');  \n            } catch (error) {  \n                alert('Failed to save character');  \n            }  \n        }\n\n        function increasePower() {  \n            if (\\!currentChar) return;  \n            currentChar.power++;  \n            updateCharacterUI();  \n        }\n\n        async function deleteCharacter(name) {  \n            if (confirm(\\`Really delete ${name}?\\`)) {  \n                await puter.kv.del(\\`char\\_${name}\\`);  \n                loadCharacters();  \n            }  \n        }\n\n        // Initialize by loading character list  \n        loadCharacters();  \n    \\</script\\>  \n\\</body\\>  \n\\</html\\>\n\nThis example shows how to manage multiple save files \\- in this case, different character saves. It demonstrates a complete character management system where players can create, load, save, and delete different characters. This pattern is common in RPGs and other games where players might want to maintain multiple playthroughs.\n\n"}